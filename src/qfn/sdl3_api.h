// sdl3_api.h - SDL3 api header, only what we use to improve compilation speed
#pragma once
#include "lib/types.h"

// ==== SDL Init ====
typedef u32 SDL_InitFlags;
#define SDL_INIT_AUDIO 0x00000010u
#define SDL_INIT_VIDEO 0x00000020u
#define SDL_INIT_JOYSTICK 0x00000200u
#define SDL_INIT_HAPTIC 0x00001000u
#define SDL_INIT_GAMEPAD 0x00002000u
#define SDL_INIT_EVENTS 0x00004000u
#define SDL_INIT_SENSOR 0x00008000u
#define SDL_INIT_CAMERA 0x00010000u

bool SDL_InitSubSystem(SDL_InitFlags flags);
void SDL_Quit(void);

// ==== SDL Window ====
typedef u64 SDL_WindowFlags;
#define SDL_WINDOW_FULLSCREEN 0x0000000000000001
#define SDL_WINDOW_OPENGL 0x0000000000000002
#define SDL_WINDOW_OCCLUDED 0x0000000000000004
#define SDL_WINDOW_HIDDEN 0x0000000000000008
#define SDL_WINDOW_BORDERLESS 0x0000000000000010
#define SDL_WINDOW_RESIZABLE 0x0000000000000020
#define SDL_WINDOW_MINIMIZED 0x0000000000000040
#define SDL_WINDOW_MAXIMIZED 0x0000000000000080
#define SDL_WINDOW_MOUSE_GRABBED 0x0000000000000100
#define SDL_WINDOW_INPUT_FOCUS 0x0000000000000200
#define SDL_WINDOW_MOUSE_FOCUS 0x0000000000000400
#define SDL_WINDOW_EXTERNAL 0x0000000000000800
#define SDL_WINDOW_MODAL 0x0000000000001000
#define SDL_WINDOW_HIGH_PIXEL_DENSITY 0x0000000000002000
#define SDL_WINDOW_MOUSE_CAPTURE 0x0000000000004000
#define SDL_WINDOW_MOUSE_RELATIVE_MODE 0x0000000000008000
#define SDL_WINDOW_ALWAYS_ON_TOP 0x0000000000010000
#define SDL_WINDOW_UTILITY 0x0000000000020000
#define SDL_WINDOW_TOOLTIP 0x0000000000040000
#define SDL_WINDOW_POPUP_MENU 0x0000000000080000
#define SDL_WINDOW_KEYBOARD_GRABBED 0x0000000000100000
#define SDL_WINDOW_VULKAN 0x0000000010000000
#define SDL_WINDOW_METAL 0x0000000020000000
#define SDL_WINDOW_TRANSPARENT 0x0000000040000000
#define SDL_WINDOW_NOT_FOCUSABLE 0x0000000080000000

typedef struct SDL_Window SDL_Window;

SDL_Window *SDL_CreateWindow(const char *title, int w, int h, SDL_WindowFlags flags);
bool SDL_GetWindowSize(SDL_Window *window, int *w, int *h);

// ==== SDL Video ====
typedef enum {
    SDL_GL_RED_SIZE,
    SDL_GL_GREEN_SIZE,
    SDL_GL_BLUE_SIZE,
    SDL_GL_ALPHA_SIZE,
    SDL_GL_BUFFER_SIZE,
    SDL_GL_DOUBLEBUFFER,
    SDL_GL_DEPTH_SIZE,
    SDL_GL_STENCIL_SIZE,
    SDL_GL_ACCUM_RED_SIZE,
    SDL_GL_ACCUM_GREEN_SIZE,
    SDL_GL_ACCUM_BLUE_SIZE,
    SDL_GL_ACCUM_ALPHA_SIZE,
    SDL_GL_STEREO,
    SDL_GL_MULTISAMPLEBUFFERS,
    SDL_GL_MULTISAMPLESAMPLES,
    SDL_GL_ACCELERATED_VISUAL,
    SDL_GL_RETAINED_BACKING,
    SDL_GL_CONTEXT_MAJOR_VERSION,
    SDL_GL_CONTEXT_MINOR_VERSION,
    SDL_GL_CONTEXT_FLAGS,
    SDL_GL_CONTEXT_PROFILE_MASK,
    SDL_GL_SHARE_WITH_CURRENT_CONTEXT,
    SDL_GL_FRAMEBUFFER_SRGB_CAPABLE,
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR,
    SDL_GL_CONTEXT_RESET_NOTIFICATION,
    SDL_GL_CONTEXT_NO_ERROR,
    SDL_GL_FLOATBUFFERS,
    SDL_GL_EGL_PLATFORM
} SDL_GLAttr;

#define SDL_GL_CONTEXT_DEBUG_FLAG 0x0001
#define SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG 0x0002
#define SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG 0x0004
#define SDL_GL_CONTEXT_RESET_ISOLATION_FLAG 0x0008

#define SDL_GL_CONTEXT_PROFILE_CORE 0x0001          /**< OpenGL Core Profile context */
#define SDL_GL_CONTEXT_PROFILE_COMPATIBILITY 0x0002 /**< OpenGL Compatibility Profile context */
#define SDL_GL_CONTEXT_PROFILE_ES 0x0004            /**< GLX_CONTEXT_ES2_PROFILE_BIT_EXT */
bool SDL_GL_SetAttribute(SDL_GLAttr attr, int value);

typedef struct SDL_GLContextState *SDL_GLContext;
SDL_GLContext SDL_GL_CreateContext(SDL_Window *window);
bool SDL_GL_SetSwapInterval(int interval);

// ==== SDL Audio ====
typedef u32 SDL_AudioDeviceID;
typedef struct SDL_AudioStream SDL_AudioStream;

typedef enum {
    SDL_AUDIO_UNKNOWN = 0x0000u,
    SDL_AUDIO_U8 = 0x0008u,
    SDL_AUDIO_S8 = 0x8008u,
    SDL_AUDIO_S16LE = 0x8010u,
    SDL_AUDIO_S16BE = 0x9010u,
    SDL_AUDIO_S32LE = 0x8020u,
    SDL_AUDIO_S32BE = 0x9020u,
    SDL_AUDIO_F32LE = 0x8120u,
    SDL_AUDIO_F32BE = 0x9120u,
    SDL_AUDIO_S16 = SDL_AUDIO_S16LE,
    SDL_AUDIO_S32 = SDL_AUDIO_S32LE,
    SDL_AUDIO_F32 = SDL_AUDIO_F32LE
} SDL_AudioFormat;

typedef struct {
    SDL_AudioFormat format;
    int channels;
    int freq;
} SDL_AudioSpec;

#define SDL_AUDIO_DEVICE_DEFAULT_PLAYBACK ((SDL_AudioDeviceID)0xFFFFFFFFu)

typedef void (*SDL_AudioStreamCallback)(void *userdata, SDL_AudioStream *stream, int additional_amount, int total_amount);
SDL_AudioStream *SDL_OpenAudioDeviceStream(SDL_AudioDeviceID devid, const SDL_AudioSpec *spec, SDL_AudioStreamCallback callback, void *userdata);
SDL_AudioDeviceID SDL_GetAudioStreamDevice(SDL_AudioStream *stream);
bool SDL_ResumeAudioDevice(SDL_AudioDeviceID devid);
int SDL_GetAudioStreamQueued(SDL_AudioStream *stream);
bool SDL_PutAudioStreamData(SDL_AudioStream *stream, const void *buf, int len);

typedef enum {
    SDL_EVENT_FIRST = 0,
    SDL_EVENT_QUIT = 0x100,
    SDL_EVENT_TERMINATING,
    SDL_EVENT_LOW_MEMORY,
    SDL_EVENT_WILL_ENTER_BACKGROUND,
    SDL_EVENT_DID_ENTER_BACKGROUND,
    SDL_EVENT_WILL_ENTER_FOREGROUND,
    SDL_EVENT_DID_ENTER_FOREGROUND,
    SDL_EVENT_LOCALE_CHANGED,
    SDL_EVENT_SYSTEM_THEME_CHANGED,
    SDL_EVENT_DISPLAY_ORIENTATION = 0x151,
    SDL_EVENT_DISPLAY_ADDED,
    SDL_EVENT_DISPLAY_REMOVED,
    SDL_EVENT_DISPLAY_MOVED,
    SDL_EVENT_DISPLAY_DESKTOP_MODE_CHANGED,
    SDL_EVENT_DISPLAY_CURRENT_MODE_CHANGED,
    SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED,
    SDL_EVENT_DISPLAY_FIRST = SDL_EVENT_DISPLAY_ORIENTATION,
    SDL_EVENT_DISPLAY_LAST = SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED,
    SDL_EVENT_WINDOW_SHOWN = 0x202,
    SDL_EVENT_WINDOW_HIDDEN,
    SDL_EVENT_WINDOW_EXPOSED,
    SDL_EVENT_WINDOW_MOVED,
    SDL_EVENT_WINDOW_RESIZED,
    SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED,
    SDL_EVENT_WINDOW_METAL_VIEW_RESIZED,
    SDL_EVENT_WINDOW_MINIMIZED,
    SDL_EVENT_WINDOW_MAXIMIZED,
    SDL_EVENT_WINDOW_RESTORED,
    SDL_EVENT_WINDOW_MOUSE_ENTER,
    SDL_EVENT_WINDOW_MOUSE_LEAVE,
    SDL_EVENT_WINDOW_FOCUS_GAINED,
    SDL_EVENT_WINDOW_FOCUS_LOST,
    SDL_EVENT_WINDOW_CLOSE_REQUESTED,
    SDL_EVENT_WINDOW_HIT_TEST,
    SDL_EVENT_WINDOW_ICCPROF_CHANGED,
    SDL_EVENT_WINDOW_DISPLAY_CHANGED,
    SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED,
    SDL_EVENT_WINDOW_SAFE_AREA_CHANGED,
    SDL_EVENT_WINDOW_OCCLUDED,
    SDL_EVENT_WINDOW_ENTER_FULLSCREEN,
    SDL_EVENT_WINDOW_LEAVE_FULLSCREEN,
    SDL_EVENT_WINDOW_DESTROYED,
    SDL_EVENT_WINDOW_HDR_STATE_CHANGED,
    SDL_EVENT_WINDOW_FIRST = SDL_EVENT_WINDOW_SHOWN,
    SDL_EVENT_WINDOW_LAST = SDL_EVENT_WINDOW_HDR_STATE_CHANGED,
    SDL_EVENT_KEY_DOWN = 0x300,
    SDL_EVENT_KEY_UP,
    SDL_EVENT_TEXT_EDITING,
    SDL_EVENT_TEXT_INPUT,
    SDL_EVENT_KEYMAP_CHANGED,
    SDL_EVENT_KEYBOARD_ADDED,
    SDL_EVENT_KEYBOARD_REMOVED,
    SDL_EVENT_TEXT_EDITING_CANDIDATES,
    SDL_EVENT_MOUSE_MOTION = 0x400,
    SDL_EVENT_MOUSE_BUTTON_DOWN,
    SDL_EVENT_MOUSE_BUTTON_UP,
    SDL_EVENT_MOUSE_WHEEL,
    SDL_EVENT_MOUSE_ADDED,
    SDL_EVENT_MOUSE_REMOVED,
    SDL_EVENT_JOYSTICK_AXIS_MOTION = 0x600,
    SDL_EVENT_JOYSTICK_BALL_MOTION,
    SDL_EVENT_JOYSTICK_HAT_MOTION,
    SDL_EVENT_JOYSTICK_BUTTON_DOWN,
    SDL_EVENT_JOYSTICK_BUTTON_UP,
    SDL_EVENT_JOYSTICK_ADDED,
    SDL_EVENT_JOYSTICK_REMOVED,
    SDL_EVENT_JOYSTICK_BATTERY_UPDATED,
    SDL_EVENT_JOYSTICK_UPDATE_COMPLETE,
    SDL_EVENT_GAMEPAD_AXIS_MOTION = 0x650,
    SDL_EVENT_GAMEPAD_BUTTON_DOWN,
    SDL_EVENT_GAMEPAD_BUTTON_UP,
    SDL_EVENT_GAMEPAD_ADDED,
    SDL_EVENT_GAMEPAD_REMOVED,
    SDL_EVENT_GAMEPAD_REMAPPED,
    SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN,
    SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION,
    SDL_EVENT_GAMEPAD_TOUCHPAD_UP,
    SDL_EVENT_GAMEPAD_SENSOR_UPDATE,
    SDL_EVENT_GAMEPAD_UPDATE_COMPLETE,
    SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED,
    SDL_EVENT_FINGER_DOWN = 0x700,
    SDL_EVENT_FINGER_UP,
    SDL_EVENT_FINGER_MOTION,
    SDL_EVENT_FINGER_CANCELED,
    SDL_EVENT_CLIPBOARD_UPDATE = 0x900,
    SDL_EVENT_DROP_FILE = 0x1000,
    SDL_EVENT_DROP_TEXT,
    SDL_EVENT_DROP_BEGIN,
    SDL_EVENT_DROP_COMPLETE,
    SDL_EVENT_DROP_POSITION,
    SDL_EVENT_AUDIO_DEVICE_ADDED = 0x1100,
    SDL_EVENT_AUDIO_DEVICE_REMOVED,
    SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED,
    SDL_EVENT_SENSOR_UPDATE = 0x1200,
    SDL_EVENT_PEN_PROXIMITY_IN = 0x1300,
    SDL_EVENT_PEN_PROXIMITY_OUT,
    SDL_EVENT_PEN_DOWN,
    SDL_EVENT_PEN_UP,
    SDL_EVENT_PEN_BUTTON_DOWN,
    SDL_EVENT_PEN_BUTTON_UP,
    SDL_EVENT_PEN_MOTION,
    SDL_EVENT_PEN_AXIS,
    SDL_EVENT_CAMERA_DEVICE_ADDED = 0x1400,
    SDL_EVENT_CAMERA_DEVICE_REMOVED,
    SDL_EVENT_CAMERA_DEVICE_APPROVED,
    SDL_EVENT_CAMERA_DEVICE_DENIED,
    SDL_EVENT_RENDER_TARGETS_RESET = 0x2000,
    SDL_EVENT_RENDER_DEVICE_RESET,
    SDL_EVENT_RENDER_DEVICE_LOST,
    SDL_EVENT_PRIVATE0 = 0x4000,
    SDL_EVENT_PRIVATE1,
    SDL_EVENT_PRIVATE2,
    SDL_EVENT_PRIVATE3,
    SDL_EVENT_POLL_SENTINEL = 0x7F00,
    SDL_EVENT_USER = 0x8000,
    SDL_EVENT_LAST = 0xFFFF,
    SDL_EVENT_ENUM_PADDING = 0x7FFFFFFF
} SDL_EventType;

typedef u32 SDL_WindowID;
typedef u32 SDL_MouseID;

typedef u32 SDL_MouseButtonFlags;
#define SDL_BUTTON_LEFT     1
#define SDL_BUTTON_MIDDLE   2
#define SDL_BUTTON_RIGHT    3
#define SDL_BUTTON_X1       4
#define SDL_BUTTON_X2       5

typedef u32 SDL_KeyboardID;
typedef u16 SDL_Keymod;

typedef u32 SDL_Keycode;
#define SDLK_UNKNOWN 0x00000000u
#define SDLK_RETURN 0x0000000du
#define SDLK_ESCAPE 0x0000001bu
#define SDLK_BACKSPACE 0x00000008u
#define SDLK_TAB 0x00000009u
#define SDLK_SPACE 0x00000020u
#define SDLK_EXCLAIM 0x00000021u
#define SDLK_DBLAPOSTROPHE 0x00000022u
#define SDLK_HASH 0x00000023u
#define SDLK_DOLLAR 0x00000024u
#define SDLK_PERCENT 0x00000025u
#define SDLK_AMPERSAND 0x00000026u
#define SDLK_APOSTROPHE 0x00000027u
#define SDLK_LEFTPAREN 0x00000028u
#define SDLK_RIGHTPAREN 0x00000029u
#define SDLK_ASTERISK 0x0000002au
#define SDLK_PLUS 0x0000002bu
#define SDLK_COMMA 0x0000002cu
#define SDLK_MINUS 0x0000002du
#define SDLK_PERIOD 0x0000002eu
#define SDLK_SLASH 0x0000002fu
#define SDLK_0 0x00000030u
#define SDLK_1 0x00000031u
#define SDLK_2 0x00000032u
#define SDLK_3 0x00000033u
#define SDLK_4 0x00000034u
#define SDLK_5 0x00000035u
#define SDLK_6 0x00000036u
#define SDLK_7 0x00000037u
#define SDLK_8 0x00000038u
#define SDLK_9 0x00000039u
#define SDLK_COLON 0x0000003au
#define SDLK_SEMICOLON 0x0000003bu
#define SDLK_LESS 0x0000003cu
#define SDLK_EQUALS 0x0000003du
#define SDLK_GREATER 0x0000003eu
#define SDLK_QUESTION 0x0000003fu
#define SDLK_AT 0x00000040u
#define SDLK_LEFTBRACKET 0x0000005bu
#define SDLK_BACKSLASH 0x0000005cu
#define SDLK_RIGHTBRACKET 0x0000005du
#define SDLK_CARET 0x0000005eu
#define SDLK_UNDERSCORE 0x0000005fu
#define SDLK_GRAVE 0x00000060u
#define SDLK_A 0x00000061u
#define SDLK_B 0x00000062u
#define SDLK_C 0x00000063u
#define SDLK_D 0x00000064u
#define SDLK_E 0x00000065u
#define SDLK_F 0x00000066u
#define SDLK_G 0x00000067u
#define SDLK_H 0x00000068u
#define SDLK_I 0x00000069u
#define SDLK_J 0x0000006au
#define SDLK_K 0x0000006bu
#define SDLK_L 0x0000006cu
#define SDLK_M 0x0000006du
#define SDLK_N 0x0000006eu
#define SDLK_O 0x0000006fu
#define SDLK_P 0x00000070u
#define SDLK_Q 0x00000071u
#define SDLK_R 0x00000072u
#define SDLK_S 0x00000073u
#define SDLK_T 0x00000074u
#define SDLK_U 0x00000075u
#define SDLK_V 0x00000076u
#define SDLK_W 0x00000077u
#define SDLK_X 0x00000078u
#define SDLK_Y 0x00000079u
#define SDLK_Z 0x0000007au
#define SDLK_LEFTBRACE 0x0000007bu
#define SDLK_PIPE 0x0000007cu
#define SDLK_RIGHTBRACE 0x0000007du
#define SDLK_TILDE 0x0000007eu
#define SDLK_DELETE 0x0000007fu
#define SDLK_PLUSMINUS 0x000000b1u
#define SDLK_CAPSLOCK 0x40000039u
#define SDLK_F1 0x4000003au
#define SDLK_F2 0x4000003bu
#define SDLK_F3 0x4000003cu
#define SDLK_F4 0x4000003du
#define SDLK_F5 0x4000003eu
#define SDLK_F6 0x4000003fu
#define SDLK_F7 0x40000040u
#define SDLK_F8 0x40000041u
#define SDLK_F9 0x40000042u
#define SDLK_F10 0x40000043u
#define SDLK_F11 0x40000044u
#define SDLK_F12 0x40000045u
#define SDLK_PRINTSCREEN 0x40000046u
#define SDLK_SCROLLLOCK 0x40000047u
#define SDLK_PAUSE 0x40000048u
#define SDLK_INSERT 0x40000049u
#define SDLK_HOME 0x4000004au
#define SDLK_PAGEUP 0x4000004bu
#define SDLK_END 0x4000004du
#define SDLK_PAGEDOWN 0x4000004eu
#define SDLK_RIGHT 0x4000004fu
#define SDLK_LEFT 0x40000050u
#define SDLK_DOWN 0x40000051u
#define SDLK_UP 0x40000052u
#define SDLK_NUMLOCKCLEAR 0x40000053u
#define SDLK_KP_DIVIDE 0x40000054u
#define SDLK_KP_MULTIPLY 0x40000055u
#define SDLK_KP_MINUS 0x40000056u
#define SDLK_KP_PLUS 0x40000057u
#define SDLK_KP_ENTER 0x40000058u
#define SDLK_KP_1 0x40000059u
#define SDLK_KP_2 0x4000005au
#define SDLK_KP_3 0x4000005bu
#define SDLK_KP_4 0x4000005cu
#define SDLK_KP_5 0x4000005du
#define SDLK_KP_6 0x4000005eu
#define SDLK_KP_7 0x4000005fu
#define SDLK_KP_8 0x40000060u
#define SDLK_KP_9 0x40000061u
#define SDLK_KP_0 0x40000062u
#define SDLK_KP_PERIOD 0x40000063u
#define SDLK_APPLICATION 0x40000065u
#define SDLK_POWER 0x40000066u
#define SDLK_KP_EQUALS 0x40000067u
#define SDLK_F13 0x40000068u
#define SDLK_F14 0x40000069u
#define SDLK_F15 0x4000006au
#define SDLK_F16 0x4000006bu
#define SDLK_F17 0x4000006cu
#define SDLK_F18 0x4000006du
#define SDLK_F19 0x4000006eu
#define SDLK_F20 0x4000006fu
#define SDLK_F21 0x40000070u
#define SDLK_F22 0x40000071u
#define SDLK_F23 0x40000072u
#define SDLK_F24 0x40000073u
#define SDLK_EXECUTE 0x40000074u
#define SDLK_HELP 0x40000075u
#define SDLK_MENU 0x40000076u
#define SDLK_SELECT 0x40000077u
#define SDLK_STOP 0x40000078u
#define SDLK_AGAIN 0x40000079u
#define SDLK_UNDO 0x4000007au
#define SDLK_CUT 0x4000007bu
#define SDLK_COPY 0x4000007cu
#define SDLK_PASTE 0x4000007du
#define SDLK_FIND 0x4000007eu
#define SDLK_MUTE 0x4000007fu
#define SDLK_VOLUMEUP 0x40000080u
#define SDLK_VOLUMEDOWN 0x40000081u
#define SDLK_KP_COMMA 0x40000085u
#define SDLK_KP_EQUALSAS400 0x40000086u
#define SDLK_ALTERASE 0x40000099u
#define SDLK_SYSREQ 0x4000009au
#define SDLK_CANCEL 0x4000009bu
#define SDLK_CLEAR 0x4000009cu
#define SDLK_PRIOR 0x4000009du
#define SDLK_RETURN2 0x4000009eu
#define SDLK_SEPARATOR 0x4000009fu
#define SDLK_OUT 0x400000a0u
#define SDLK_OPER 0x400000a1u
#define SDLK_CLEARAGAIN 0x400000a2u
#define SDLK_CRSEL 0x400000a3u
#define SDLK_EXSEL 0x400000a4u
#define SDLK_KP_00 0x400000b0u
#define SDLK_KP_000 0x400000b1u
#define SDLK_THOUSANDSSEPARATOR 0x400000b2u
#define SDLK_DECIMALSEPARATOR 0x400000b3u
#define SDLK_CURRENCYUNIT 0x400000b4u
#define SDLK_CURRENCYSUBUNIT 0x400000b5u
#define SDLK_KP_LEFTPAREN 0x400000b6u
#define SDLK_KP_RIGHTPAREN 0x400000b7u
#define SDLK_KP_LEFTBRACE 0x400000b8u
#define SDLK_KP_RIGHTBRACE 0x400000b9u
#define SDLK_KP_TAB 0x400000bau
#define SDLK_KP_BACKSPACE 0x400000bbu
#define SDLK_KP_A 0x400000bcu
#define SDLK_KP_B 0x400000bdu
#define SDLK_KP_C 0x400000beu
#define SDLK_KP_D 0x400000bfu
#define SDLK_KP_E 0x400000c0u
#define SDLK_KP_F 0x400000c1u
#define SDLK_KP_XOR 0x400000c2u
#define SDLK_KP_POWER 0x400000c3u
#define SDLK_KP_PERCENT 0x400000c4u
#define SDLK_KP_LESS 0x400000c5u
#define SDLK_KP_GREATER 0x400000c6u
#define SDLK_KP_AMPERSAND 0x400000c7u
#define SDLK_KP_DBLAMPERSAND 0x400000c8u
#define SDLK_KP_VERTICALBAR 0x400000c9u
#define SDLK_KP_DBLVERTICALBAR 0x400000cau
#define SDLK_KP_COLON 0x400000cbu
#define SDLK_KP_HASH 0x400000ccu
#define SDLK_KP_SPACE 0x400000cdu
#define SDLK_KP_AT 0x400000ceu
#define SDLK_KP_EXCLAM 0x400000cfu
#define SDLK_KP_MEMSTORE 0x400000d0u
#define SDLK_KP_MEMRECALL 0x400000d1u
#define SDLK_KP_MEMCLEAR 0x400000d2u
#define SDLK_KP_MEMADD 0x400000d3u
#define SDLK_KP_MEMSUBTRACT 0x400000d4u
#define SDLK_KP_MEMMULTIPLY 0x400000d5u
#define SDLK_KP_MEMDIVIDE 0x400000d6u
#define SDLK_KP_PLUSMINUS 0x400000d7u
#define SDLK_KP_CLEAR 0x400000d8u
#define SDLK_KP_CLEARENTRY 0x400000d9u
#define SDLK_KP_BINARY 0x400000dau
#define SDLK_KP_OCTAL 0x400000dbu
#define SDLK_KP_DECIMAL 0x400000dcu
#define SDLK_KP_HEXADECIMAL 0x400000ddu
#define SDLK_LCTRL 0x400000e0u
#define SDLK_LSHIFT 0x400000e1u
#define SDLK_LALT 0x400000e2u
#define SDLK_LGUI 0x400000e3u
#define SDLK_RCTRL 0x400000e4u
#define SDLK_RSHIFT 0x400000e5u
#define SDLK_RALT 0x400000e6u
#define SDLK_RGUI 0x400000e7u
#define SDLK_MODE 0x40000101u
#define SDLK_SLEEP 0x40000102u
#define SDLK_WAKE 0x40000103u
#define SDLK_CHANNEL_INCREMENT 0x40000104u
#define SDLK_CHANNEL_DECREMENT 0x40000105u
#define SDLK_MEDIA_PLAY 0x40000106u
#define SDLK_MEDIA_PAUSE 0x40000107u
#define SDLK_MEDIA_RECORD 0x40000108u
#define SDLK_MEDIA_FAST_FORWARD 0x40000109u
#define SDLK_MEDIA_REWIND 0x4000010au
#define SDLK_MEDIA_NEXT_TRACK 0x4000010bu
#define SDLK_MEDIA_PREVIOUS_TRACK 0x4000010cu
#define SDLK_MEDIA_STOP 0x4000010du
#define SDLK_MEDIA_EJECT 0x4000010eu
#define SDLK_MEDIA_PLAY_PAUSE 0x4000010fu
#define SDLK_MEDIA_SELECT 0x40000110u
#define SDLK_AC_NEW 0x40000111u
#define SDLK_AC_OPEN 0x40000112u
#define SDLK_AC_CLOSE 0x40000113u
#define SDLK_AC_EXIT 0x40000114u
#define SDLK_AC_SAVE 0x40000115u
#define SDLK_AC_PRINT 0x40000116u
#define SDLK_AC_PROPERTIES 0x40000117u
#define SDLK_AC_SEARCH 0x40000118u
#define SDLK_AC_HOME 0x40000119u
#define SDLK_AC_BACK 0x4000011au
#define SDLK_AC_FORWARD 0x4000011bu
#define SDLK_AC_STOP 0x4000011cu
#define SDLK_AC_REFRESH 0x4000011du
#define SDLK_AC_BOOKMARKS 0x4000011eu
#define SDLK_SOFTLEFT 0x4000011fu
#define SDLK_SOFTRIGHT 0x40000120u
#define SDLK_CALL 0x40000121u
#define SDLK_ENDCALL 0x40000122u
#define SDLK_LEFT_TAB 0x20000001u
#define SDLK_LEVEL5_SHIFT 0x20000002u
#define SDLK_MULTI_KEY_COMPOSE 0x20000003u
#define SDLK_LMETA 0x20000004u
#define SDLK_RMETA 0x20000005u
#define SDLK_LHYPER 0x20000006u
#define SDLK_RHYPER 0x20000007u

typedef struct {
    SDL_EventType type;
    u32 reserved;
    u64 timestamp;
    SDL_WindowID windowID;
    i32 data1;
    i32 data2;
} SDL_WindowEvent;

typedef struct SDL_KeyboardEvent {
    SDL_EventType type;
    u32 reserved;
    u64 timestamp;
    SDL_WindowID windowID;
    SDL_KeyboardID which;
    u32 scancode;
    SDL_Keycode key;
    SDL_Keymod mod;
    u16 raw;
    bool down;
    bool repeat;
} SDL_KeyboardEvent;

typedef struct {
    SDL_EventType type;
    u32 reserved;
    u64 timestamp;
    SDL_WindowID windowID;
    SDL_MouseID which;
    SDL_MouseButtonFlags state;
    float x;
    float y;
    float xrel;
    float yrel;
} SDL_MouseMotionEvent;

typedef struct {
    SDL_EventType type;
    u32 reserved;
    u64 timestamp;
    SDL_WindowID windowID;
    SDL_MouseID which;
    u8 button;
    bool down;
    u8 clicks;
    u8 padding;
    float x;
    float y;
} SDL_MouseButtonEvent;

typedef enum {
    SDL_MOUSEWHEEL_NORMAL,
    SDL_MOUSEWHEEL_FLIPPED,
} SDL_MouseWheelDirection;

typedef struct {
    SDL_EventType type;
    u32 reserved;
    u64 timestamp;
    SDL_WindowID windowID;
    SDL_MouseID which;
    float x;
    float y;
    SDL_MouseWheelDirection direction;
    float mouse_x;
    float mouse_y;
    i32 integer_x;
    i32 integer_y;
} SDL_MouseWheelEvent;

typedef union {
    u32 type;
    SDL_WindowEvent window;
    SDL_KeyboardEvent key;
    SDL_MouseMotionEvent motion;
    SDL_MouseButtonEvent button;
    SDL_MouseWheelEvent wheel;
    u8 padding[128];
} SDL_Event;

bool SDL_PollEvent(SDL_Event *event);
bool SDL_SetWindowRelativeMouseMode(SDL_Window *window, bool enabled);
bool SDL_GL_SwapWindow(SDL_Window *window);

